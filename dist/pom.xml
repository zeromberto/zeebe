<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <name>Zeebe Distribution</name>
  <artifactId>zeebe-distribution</artifactId>
  <packaging>jar</packaging>

  <parent>
    <groupId>io.zeebe</groupId>
    <artifactId>zeebe-parent</artifactId>
    <version>0.24.0-SNAPSHOT</version>
    <relativePath>../parent</relativePath>
  </parent>

  <properties>
    <zbctl.force>false</zbctl.force>
    <zbctl.rootDir>${maven.multiModuleProjectDirectory}</zbctl.rootDir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>zeebe-broker</artifactId>
    </dependency>

    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>zeebe-gateway</artifactId>
    </dependency>

    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>zeebe-elasticsearch-exporter</artifactId>
    </dependency>

    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>zeebe-util</artifactId>
    </dependency>

    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>atomix</artifactId>
    </dependency>

    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>atomix-cluster</artifactId>
    </dependency>

    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>atomix-utils</artifactId>
    </dependency>

    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>zeebe-legacy-toml-config</artifactId>
    </dependency>

    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_httpserver</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>

    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_hotspot</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.13.0</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
    </dependency>
    <!-- needed for the Spring actuators which enable health checks and liveness probes-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-actuator-autoconfigure</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <configuration>
          <configurationDirectory>config</configurationDirectory>
          <copyConfigurationDirectory>true</copyConfigurationDirectory>
          <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
          <extraJvmArguments>
            -Xms128m
            --illegal-access=deny
          </extraJvmArguments>
          <repositoryLayout>flat</repositoryLayout>
          <useWildcardClassPath>true</useWildcardClassPath>
          <repositoryName>lib</repositoryName>
          <assembleDirectory>${project.build.directory}/zeebe-broker</assembleDirectory>
          <platforms>
            <platform>windows</platform>
            <platform>unix</platform>
          </platforms>
          <programs>
            <program>
              <mainClass>io.zeebe.broker.StandaloneBroker</mainClass>
              <id>broker</id>
            </program>
            <program>
              <mainClass>io.zeebe.gateway.StandaloneGateway</mainClass>
              <id>gateway</id>
            </program>
          </programs>
        </configuration>
        <executions>
          <execution>
            <id>assemble</id>
            <phase>package</phase>
            <goals>
              <goal>assemble</goal>
            </goals>
            <configuration>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-zbctl</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy file="${zbctl.rootDir}/clients/go/cmd/zbctl/dist/zbctl"
                  tofile="${project.build.directory}/zeebe-broker/bin/zbctl"
                  failonerror="${zbctl.force}"/>
                <copy file="${zbctl.rootDir}/clients/go/cmd/zbctl/dist/zbctl.exe"
                  tofile="${project.build.directory}/zeebe-broker/bin/zbctl.exe"
                  failonerror="${zbctl.force}"/>
                <copy file="${zbctl.rootDir}/clients/go/cmd/zbctl/dist/zbctl.darwin"
                  tofile="${project.build.directory}/zeebe-broker/bin/zbctl.darwin"
                  failonerror="${zbctl.force}"/>
                <chmod dir="${project.build.directory}/zeebe-broker/bin" perm="ugo+rx"
                  includes="zbctl*" failonerror="${zbctl.force}"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>true</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>src/main/assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <!-- dependencies only packaged but not explicitly used -->
          <usedDependencies>
            <dependency>io.zeebe:zeebe-elasticsearch-exporter</dependency>

            <!-- Needed for Spring Actuators, which provide health checks and liveness/readiness probed -->
            <dependency>org.springframework.boot:spring-boot-starter-web</dependency>
            <dependency>org.springframework.boot:spring-boot-actuator-autoconfigure</dependency>

          </usedDependencies>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>

